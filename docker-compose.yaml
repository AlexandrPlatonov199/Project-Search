version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile

    restart: unless-stopped

    env_file:
      - .env
    environment:
      - API__INSTANCE_APP_NAME=test
      - POSTGRES__HOST=postgres
      - POSTGRES__PORT=5432
    depends_on:
      - postgres
      - migrations
    ports:
      - ${API__PORT}:5000

    command: [
      "poetry", "run", "uvicorn", "app:app",
      "--host", "0.0.0.0",
      "--port", '5000',
    ]
    networks:
      - backend

  postgres:
    image: postgres:14.8-alpine3.18
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES__PASSWORD}
      - POSTGRES_USER=${POSTGRES__USER}
      - POSTGRES_DB=${POSTGRES__DATABASE_NAME}
    ports:
      - ${POSTGRES__PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  migrations:
    build:
      context: .
      dockerfile: docker/migrations/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES__HOST=postgres
      - POSTGRES__PORT=5432
    depends_on:
      - postgres
    command: >
      bash -c "
      ./scripts/wait-for-server.sh postgres:5432 -t 120 &&
      poetry run python -m scripts.migrate"
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
